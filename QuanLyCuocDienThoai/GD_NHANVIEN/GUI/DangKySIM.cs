using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using GD_NHANVIEN.DAL;
using Model.EFModel;
namespace GD_NHANVIEN.GUI
{
    public partial class DangKySIM : DevExpress.XtraEditors.XtraForm
    {
        public string MaKH = "";
        QLCuocDTContext db = new QLCuocDTContext();
        public DangKySIM()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            DangKySIMDAL dal = new DangKySIMDAL();
            var res = dal.Load();
            // This line of code is generated by Data Source Configuration Wizard
            hoaDonDangKiesBindingSource1.DataSource = res;
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //Model.EFModel.QLCuocDTContext dbContext = new Model.EFModel.QLCuocDTContext();
            //// Call the Load method to get the data for the given DbSet from the database.
            //dbContext.HoaDonDangKies.Load();
            //// This line of code is generated by Data Source Configuration Wizard
            //hoaDonDangKiesBindingSource1.DataSource = dbContext.HoaDonDangKies.Local.ToBindingList();
        }
        internal void Change()
        {
            int a = Convert.ToInt32(MaKH);           
            txtmakh.Text = db.KhachHangs.Where(s => s.KhachHangID == a).Select(s => s.TenKH).FirstOrDefault().ToString();
        }
        private void label4_Click(object sender, EventArgs e)
        {

        }

        private void textBox3_TextChanged(object sender, EventArgs e)
        {

        }

        private void simpleButton6_Click(object sender, EventArgs e)
        {
            ThongtinKH f = new ThongtinKH(null,this,null);
            f.Show();
        }

        private void banghddk_Click(object sender, EventArgs e)
        {
            
        }
        public void Clear()
        {
            DangKySIMDAL dal = new DangKySIMDAL();
            txtidhd.Clear();
            txtmakh.Clear();
            cbngaydk.Checked = false;
            chidk.Clear();
            tttt.Checked = false;
            MaKH = "";
            hoaDonDangKiesBindingSource1.DataSource = dal.Load();
        }
        public void ClearHD()
        {
            
            txtidhd.Clear();
            txtmakh.Clear();
            cbngaydk.Checked = false;
            chidk.Clear();
            tttt.Checked = false;
            MaKH = "";

        }
        private void gridControl1_Click(object sender, EventArgs e)
        {
            txtidhd.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "HoaDonDangKyID").ToString();
            txtmakh.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "KhachHangID").ToString();
            ngaydk.Value = (DateTime)gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "NgayDK");
            chidk.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "ChiPhiDK").ToString();
            var res = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "TinhTrangThanhToan");
            if (res.Equals(true))
                tttt.Checked = true;
            else tttt.Checked = false;
            IDKH_SUA = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "KhachHangID").ToString();
            MaKH = IDKH_SUA;
            var a = Convert.ToInt32(IDKH_SUA);
            txtmakh.Text = db.KhachHangs.Where(s => s.KhachHangID == a).Select(s => s.TenKH).FirstOrDefault().ToString();
            cbngaydk.Checked = true;
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            try
            {
                DangKySIMDAL dal = new DangKySIMDAL();
                if (txtmakh.Text == "" || cbngaydk.Checked == false || chidk.Text == "")
                    MessageBox.Show("Vui lòng nhập đầy đủ thông tin", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                else if (dal.testnumber(chidk.Text) == 0)
                {
                    MessageBox.Show("Chi phí đăng ký phải là số", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else if(MaKH=="")
                {
                    MessageBox.Show("Vui lòng chọn khách hàng muốn đăng ký", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else
                {
                    string a = "";
                    if (tttt.Checked == true)
                        a = "True";
                    else a = "False";

                    dal.ThemHDDK(MaKH, ngaydk.Value.ToString("yyyy/MM/dd"), chidk.Text, a);
                    MessageBox.Show("Thêm hóa đơn thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                    Clear();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Đã có lỗi xảy ra!");
            }
        }
        public string IDKH_SUA;
        private void simpleButton5_Click(object sender, EventArgs e)
        {
            try
            {
                DangKySIMDAL dal = new DangKySIMDAL();
                if (txtmakh.Text == "" && cbngaydk.Checked == false && chidk.Text == "")
                    MessageBox.Show("Vui lòng nhập đầy đủ thông tin", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                else if (dal.testnumber(chidk.Text) == 0)
                {
                    MessageBox.Show("Chi phí đăng ký phải là số", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                
                else
                {
                    if(MaKH=="")
                    {
                        string a = "";
                        if (tttt.Checked == true)
                            a = "True";
                        else
                            a = "False";
                        dal.SuaHDDK(txtidhd.Text, ngaydk.Value.ToString("yyyy/MM/dd"), chidk.Text, a);
                        MessageBox.Show("Sửa hóa đơn " + txtidhd.Text + " thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        Clear();
                    }
                    else
                    {
                        if (dal.textexistmakh(Convert.ToInt32(MaKH)) == IDKH_SUA)
                        {
                            string a = "";
                            if (tttt.Checked == true)
                                a = "True";
                            else
                                a = "False";
                            dal.SuaHDDK(txtidhd.Text, ngaydk.Value.ToString("yyyy/MM/dd"), chidk.Text, a);
                            MessageBox.Show("Sửa hóa đơn " + txtidhd.Text + " thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            Clear();
                        }
                        else
                        {
                            MessageBox.Show("Không được sửa khách hàng", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }

                    }


                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Đã có lỗi xảy ra!");
            }
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            DangKySIMDAL dal = new DangKySIMDAL();
            if (txtidhd.Text == "")
                MessageBox.Show("Vui lòng chọn hóa đơn muốn xóa!!", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
            else if (MessageBox.Show("Bạn có thật sự muốn xóa?", "Xóa SIM", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                dal.XoaHDDK(txtidhd.Text);
                MessageBox.Show("Xóa mã SIM " + txtidhd.Text + " thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                Clear();
            }
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            Clear();
        }

        private void simpleButton4_Click(object sender, EventArgs e)
        {
            try
            {
                DangKySIMDAL dal = new DangKySIMDAL();
                if (MaKH=="" && cbngaydk.Checked == false && chidk.Text == "" && tttt.Checked==false)
                {
                    var res = dal.TimHDDK("", "False", "", "", "False");
                    hoaDonDangKiesBindingSource1.DataSource = res;
                    MessageBox.Show("Tìm kiếm thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                    ClearHD();
                }
                else if (chidk.Text!="" && dal.testnumber(chidk.Text) == 0)
                {
                    MessageBox.Show("Chi phí đăng ký phải là số", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else
                {                   
                        string a = "";
                        string b = "";
                        if (tttt.Checked == true)
                            a = "True";
                        else a = "False";
                    if (cbngaydk.Checked == true)
                        b = "True";
                    else b = "False";
                    var res=dal.TimHDDK(MaKH, b, ngaydk.Text, chidk.Text, a);
                    hoaDonDangKiesBindingSource1.DataSource = res;
                    MessageBox.Show("Tìm kiếm thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                    ClearHD();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Đã có lỗi xảy ra!");
            }
        }
    }
}