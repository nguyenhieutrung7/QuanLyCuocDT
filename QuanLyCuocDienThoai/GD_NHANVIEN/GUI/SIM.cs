using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using GD_NHANVIEN.DAL;
namespace GD_NHANVIEN.GUI
{
    public partial class SIM : DevExpress.XtraEditors.XtraForm
    {
        public string IDHD = "";
        public SIM()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //Model.EFModel.QLCuocDTContext dbContext = new Model.EFModel.QLCuocDTContext();
            //// Call the Load method to get the data for the given DbSet from the database.
            //dbContext.SIMs.Load();
            //// This line of code is generated by Data Source Configuration Wizard
            //sIMsBindingSource1.DataSource = dbContext.SIMs.Local.ToBindingList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //Model.EFModel.QLCuocDTContext dbContext = new Model.EFModel.QLCuocDTContext();
            //// Call the Load method to get the data for the given DbSet from the database.
            //dbContext.SIMs.Load();
            // This line of code is generated by Data Source Configuration Wizard
            SIMDAL dal = new SIMDAL();
            var res = dal.Load();
            sIMsBindingSource.DataSource = res;
        }
        internal void Change()
        {
            txtidhd.Text = IDHD;
        }
        public void Clear()
        {
            SIMDAL dal = new SIMDAL();
            txtidhd.Clear();
            txtsosim.Clear();
            txtidsim.Clear();
            txttensim.Clear();
            sIMsBindingSource.DataSource = dal.Load();

        }
        public void ClearSIM()
        {
            txtidhd.Clear();
            txtsosim.Clear();
            txtidsim.Clear();
            txttensim.Clear();


        }

        private void simpleButton6_Click(object sender, EventArgs e)
        {
            ThongTinHDDK f = new ThongTinHDDK(this,null);
            f.Show();
        }
        public string IDHDDK_SUA;
        public string SoSIM_SUA;
        private void gridControl1_Click(object sender, EventArgs e)
        {
            txtidsim.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "SIMID").ToString();
            txttensim.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "TenSim").ToString();
            txtsosim.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "SoSim").ToString();
            txtidhd.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "HoaDonDangKyID").ToString();  
            IDHDDK_SUA= txtidhd.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "HoaDonDangKyID").ToString();
            SoSIM_SUA= txtsosim.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "SoSim").ToString();
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            try
            {
                SIMDAL dal = new SIMDAL();
                if (txttensim.Text == "" || txtsosim.Text == "" || txtidhd.Text == "")
                    MessageBox.Show("Vui lòng nhập đầy đủ thông tin", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                else if (dal.testnumber(txtsosim.Text) == 0)
                {
                    MessageBox.Show("Số sim phải là số", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else if (dal.testsosim(txtsosim.Text) == 0)
                {
                    MessageBox.Show("Số sim không hợp lệ", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);

                }               
                else 
                {
                    if (dal.testexistsim1(txtsosim.Text) == "Success")
                    {
                        if(dal.testexistidhd(Convert.ToInt32(txtidhd.Text))!= txtidhd.Text)
                        {
                            dal.ThemSIM(txttensim.Text, txtsosim.Text, txtidhd.Text);
                            MessageBox.Show("Thêm Sim thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            Clear();
                        }
                        else 
                        {
                            MessageBox.Show("Hóa đơn đăng ký đã tồn tại", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }

                        
                    }
                    else 
                    {
                        MessageBox.Show("Số SIM đã tồn tại", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }                                          
                }
                

            }
            catch (Exception ex)
            {
                MessageBox.Show("Đã có lỗi xảy ra!");
            }
        }
        
        private void simpleButton5_Click(object sender, EventArgs e)
        {
            try
            {
                SIMDAL dal = new SIMDAL();
                if (txttensim.Text == "" || txtsosim.Text == "" || txtidhd.Text == "")
                    MessageBox.Show("Vui lòng nhập đầy đủ thông tin", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                else if (dal.testnumber(txtsosim.Text) == 0)
                {
                    MessageBox.Show("Số sim phải là số", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else if (dal.testsosim(txtsosim.Text) == 0)
                {
                    MessageBox.Show("Số sim không hợp lệ", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                
                else if (dal.testexistidhd(Convert.ToInt32(txtidhd.Text)) != IDHDDK_SUA)
                {
                    MessageBox.Show("Hóa đơn đăng ký đã tồn tại", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else
                {
                    if (dal.testexistsim(txtsosim.Text,SoSIM_SUA) == "Success")
                    {
                        if (dal.testexistidhd(Convert.ToInt32(txtidhd.Text)) == IDHDDK_SUA)
                        {
                            dal.SuaSIM(txtidsim.Text, txttensim.Text, txtsosim.Text);
                            MessageBox.Show("Sửa Sim thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                            Clear();
                        }
                        else 
                        {
                            MessageBox.Show("Hóa đơn đăng ký đã tồn tại", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }

                    }
                    else 
                    {
                        MessageBox.Show("Số SIM đã tồn tại", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }

                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Đã có lỗi xảy ra!");
            }
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            SIMDAL dal = new SIMDAL();
            if(txtidsim.Text=="")
                MessageBox.Show("Vui lòng chọn SIM muốn xóa!!", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
            else if (MessageBox.Show("Bạn có thật sự muốn xóa?", "Xóa SIM", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                dal.XoaSIM(txtidsim.Text);
                MessageBox.Show("Xóa mã SIM " + txtidsim.Text + " thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                Clear();
            }
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            Clear();
        }

        private void simpleButton4_Click(object sender, EventArgs e)
        {
            SIMDAL dal = new SIMDAL();
            if (txttensim.Text == "" && txtsosim.Text == "" && txtidhd.Text == "")
                MessageBox.Show("Vui lòng nhập thông tin cần tìm", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);           
            else
            {
                var res = dal.TimSIM(txttensim.Text, txtsosim.Text, txtidhd.Text);
                sIMsBindingSource.DataSource = res;
                MessageBox.Show("Tìm kiếm thành công", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                ClearSIM();

            }

        }
    }
}